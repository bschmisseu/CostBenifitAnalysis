{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nexport default function InputPage(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [directCost, setDirectCost] = useState('');\n  const [indirectCost, setIndirectCost] = useState('');\n  const [intangibleCost, setIntangibleCost] = useState('');\n  const [opportunityCost, setOpportunityCost] = useState('');\n  const [potentialRiskCost, setPotentialRiskCost] = useState('');\n  const [salesRevenue, setSalesRevenue] = useState('');\n  const [intangibleRevenue, setIntangibleRevenue] = useState('');\n  const [potentialRevenue, setPotentialRevenue] = useState('');\n\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const onChangeDirectCost = event => {\n    setDirectCost(event.target.value);\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  const onChangeSalesRevenue = event => {\n    setSalesRevenue(event.target.value);\n  };\n\n  const onChangeIntangibleRevenue = event => {\n    setIntangibleRevenue(event.target.value);\n  };\n\n  const onChangePotentialRevenue = event => {\n    setPotentialRevenue(event.target.value);\n  };\n\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n    const json = JSON.stringify({\n      \"name\": name,\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost,\n      \"salesRevenue\": salesRevenue,\n      \"intangibleRevenue\": intangibleRevenue,\n      \"potentialRevenue\": potentialRevenue\n    });\n    let status = await service.createEntry(json);\n    event.preventDefault();\n\n    if (status != \"\") {\n      history.push(\"/output\");\n    } else {\n      alert(\"An account with that username and password could not be found.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: 8,\n      pb: 10,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          label: \"Entry Name\",\n          onChange: props.onChangeName,\n          name: \"name\",\n          value: name,\n          error: name !== \"\" && !name.match(\"^[A-Za-z]\"),\n          helperText: name !== \"\" && !name.match(\"^[A-Za-z]\") ? \"Must be a valid name\" : \"\",\n          onChange: onChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureTwoColumns, {\n      bucket1: [/*#__PURE__*/_jsxDEV(InputCost, {\n        directCost: directCost,\n        onChangeDirectCost: onChangeDirectCost,\n        indirectCost: indirectCost,\n        onChangeIndirectCost: onChangeIndirectCost,\n        intangibleCost: intangibleCost,\n        onChangeIntangibleCost: onChangeIntangibleCost,\n        opportunityCost: opportunityCost,\n        onChangeOpportunityCost: onChangeOpportunityCost,\n        potentialRiskCost: potentialRiskCost,\n        onChangePotentialRiskCost: onChangePotentialRiskCost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this)],\n      bucket2: [/*#__PURE__*/_jsxDEV(InputRevenue, {\n        salesRevenue: salesRevenue,\n        onChangeSalesRevenue: onChangeSalesRevenue,\n        intangibleRevenue: intangibleRevenue,\n        onChangeIntangibleRevenue: onChangeIntangibleRevenue,\n        potentialRevenue: potentialRevenue,\n        onChangePotentialRevenue: onChangePotentialRevenue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureContainer, {\n      bucket1: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: handleSubmit,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputPage, \"1yMEra6M0CmVdIaqNbEjEWqjWzs=\", false, function () {\n  return [useHistory];\n});\n\n_c = InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js"],"names":["React","useState","useHistory","NavbarEmpty","StructureTwoColumns","StructureContainer","InputCost","InputRevenue","Button","TextField","Box","InputPage","props","name","setName","directCost","setDirectCost","indirectCost","setIndirectCost","intangibleCost","setIntangibleCost","opportunityCost","setOpportunityCost","potentialRiskCost","setPotentialRiskCost","salesRevenue","setSalesRevenue","intangibleRevenue","setIntangibleRevenue","potentialRevenue","setPotentialRevenue","onChangeName","event","target","value","onChangeDirectCost","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","onChangeSalesRevenue","onChangeIntangibleRevenue","onChangePotentialRevenue","history","handleSubmit","json","JSON","stringify","status","service","createEntry","preventDefault","push","alert","match"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\n\n\nexport default function InputPage(props) {\n\n  const [name, setName] = useState('');\n\n  const [directCost, setDirectCost] = useState('');\n  const [indirectCost, setIndirectCost] = useState('');\n  const [intangibleCost, setIntangibleCost] = useState('');\n  const [opportunityCost, setOpportunityCost] = useState('');\n  const [potentialRiskCost, setPotentialRiskCost] = useState('');\n  const [salesRevenue, setSalesRevenue] = useState('');\n  const [intangibleRevenue, setIntangibleRevenue] = useState('');\n  const [potentialRevenue, setPotentialRevenue] = useState('');\n\n  const onChangeName = (event) => {\n    setName(event.target.value);\n  }\n\n  const onChangeDirectCost = (event) => {\n    setDirectCost(event.target.value);\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n  const onChangeSalesRevenue = (event) => {\n    setSalesRevenue(event.target.value);\n  }\n  const onChangeIntangibleRevenue = (event) => {\n    setIntangibleRevenue(event.target.value);\n  }\n  const onChangePotentialRevenue = (event) => {\n    setPotentialRevenue(event.target.value);\n  }\n\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n\n  const json = JSON.stringify({\n    \"name\": name,\n    \"directCost\": directCost,\n    \"indirectCost\": indirectCost,\n    \"intangibleCost\": intangibleCost,\n    \"opportunityCost\": opportunityCost,\n    \"potentialRiskCost\": potentialRiskCost,\n    \"salesRevenue\": salesRevenue,\n    \"intangibleRevenue\": intangibleRevenue,\n    \"potentialRevenue\": potentialRevenue\n  });\n\n  let status = await service.createEntry(json);\n  event.preventDefault();\n\n  if(status != \"\") {\n    history.push(\"/output\");\n  }\n  else {\n    alert(\"An account with that username and password could not be found.\");\n  }\n\n}\n\n  return (\n    <React.Fragment>\n      <NavbarEmpty />\n      <Box pt={8} pb={10}>\n        <Box mb={2} textAlign=\"center\">\n          <TextField variant=\"outlined\" \n            label=\"Entry Name\" \n            onChange={props.onChangeName} \n            name=\"name\"\n            value={name}\n            error={name !== \"\" && !name.match(\"^[A-Za-z]\")}\n            helperText={name !== \"\" && !name.match(\"^[A-Za-z]\") ? \"Must be a valid name\" : \"\"}\n            onChange={onChangeName}\n          />\n        </Box>\n      </Box>\n      <StructureTwoColumns\n        bucket1={[<InputCost \n          directCost  = {directCost}\n          onChangeDirectCost = {onChangeDirectCost}\n          indirectCost = {indirectCost}\n          onChangeIndirectCost = {onChangeIndirectCost}\n          intangibleCost = {intangibleCost}\n          onChangeIntangibleCost = {onChangeIntangibleCost}\n          opportunityCost = {opportunityCost}\n          onChangeOpportunityCost = {onChangeOpportunityCost}\n          potentialRiskCost = {potentialRiskCost}\n          onChangePotentialRiskCost = {onChangePotentialRiskCost}\n          />]}\n        bucket2={[<InputRevenue \n            salesRevenue = {salesRevenue}\n            onChangeSalesRevenue = {onChangeSalesRevenue}\n            intangibleRevenue = {intangibleRevenue}\n            onChangeIntangibleRevenue = {onChangeIntangibleRevenue}\n            potentialRevenue = {potentialRevenue}\n            onChangePotentialRevenue = {onChangePotentialRevenue}\n          />]}\n      />\n\n\n      <StructureContainer bucket1={[<Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>Calculate</Button>]} />\n\n    </React.Fragment>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}