{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/components/InputCost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { useHistory } from 'react-router-dom';\nexport default function Component(props) {\n  _s();\n\n  const [directCost, setDirectCost] = useState();\n  const [indirectCost, setIndirectCost] = useState();\n  const [intangibleCost, setIntangibleCost] = useState();\n  const [opportunityCost, setOpportunityCost] = useState();\n  const [potentialRiskCost, setPotentialRiskCost] = useState();\n  const [salesRevenue, setSalesRevenue] = useState();\n  const [intangibleRevenue, setIntangibleRevenue] = useState();\n  const [potentialRevenue, setPotentialRevenue] = useState();\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n    const json = JSON.stringify({\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost,\n      \"salesRevenue\": salesRevenue,\n      \"intangibleRevenue\": intangibleRevenue,\n      \"potentialRevenue\": potentialRevenue\n    }); // let status = await service.loginUser(json);\n    // event.preventDefault();\n    // if(status != \"\") {\n    //   history.push(\"/input\");\n    // }\n    // else {\n    //   alert(\"An account with that username and password could not be found.\");\n    // }\n  };\n\n  const onChangeDirectCost = event => {\n    setDirectCost(event.target.value);\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  const onChangeSalesRevenue = event => {\n    setSalesRevenue(event.target.value);\n  };\n\n  const onChangeIntangibleRevenue = event => {\n    setIntangibleRevenue(event.target.value);\n  };\n\n  const onChangePotentialRevenue = event => {\n    setPotentialRevenue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          onSubmit: handleSubmit,\n          onError: errors => console.log(errors),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"h2\",\n                children: \"Cost Streams\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Direct Cost *\",\n                  onChange: onChangeDirectCost,\n                  name: \"directCost\",\n                  value: directCost,\n                  validators: ['required', 'matchRegexp:^[$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Indirect Cost *\",\n                  onChange: onChangeIndirectCost,\n                  name: \"indirectCost\",\n                  value: indirectCost,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Intangible Cost\",\n                  onChange: onChangeIntangibleCost,\n                  name: \"intangibleCost\",\n                  value: intangibleCost,\n                  validators: ['matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Opportunity Cost\",\n                  onChange: onChangeOpportunityCost,\n                  name: \"opportunityCost\",\n                  value: opportunityCost,\n                  validators: ['matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Potential Risk Cost\",\n                  onChange: onChangePotentialRiskCost,\n                  name: \"potentialRiskCost\",\n                  value: potentialRiskCost,\n                  validators: ['matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"h2\",\n                children: \"Revenue Streams\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Sales Revenue *\",\n                  onChange: onChangeSalesRevenue,\n                  name: \"salesRevenue\",\n                  value: salesRevenue,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Intangible Revenue\",\n                  onChange: onChangeIntangibleRevenue,\n                  name: \"intangibleRevenue\",\n                  value: intangibleRevenue,\n                  validators: ['matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Potential Revenue\",\n                  onChange: onChangePotentialRevenue,\n                  name: \"potentialRevenue\",\n                  value: potentialRevenue,\n                  validators: ['matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Component, \"XKkOosSaEntvGK84Rnh3qhY2cNY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/components/InputCost.js"],"names":["React","useState","Container","Box","Typography","Grid","ValidatorForm","TextValidator","useHistory","Component","props","directCost","setDirectCost","indirectCost","setIndirectCost","intangibleCost","setIntangibleCost","opportunityCost","setOpportunityCost","potentialRiskCost","setPotentialRiskCost","salesRevenue","setSalesRevenue","intangibleRevenue","setIntangibleRevenue","potentialRevenue","setPotentialRevenue","history","handleSubmit","json","JSON","stringify","onChangeDirectCost","event","target","value","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","onChangeSalesRevenue","onChangeIntangibleRevenue","onChangePotentialRevenue","errors","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Component(props) {\n\n  const [directCost, setDirectCost] = useState();\n  const [indirectCost, setIndirectCost] = useState();\n  const [intangibleCost, setIntangibleCost] = useState();\n  const [opportunityCost, setOpportunityCost] = useState();\n  const [potentialRiskCost, setPotentialRiskCost] = useState();\n\n  const [salesRevenue, setSalesRevenue] = useState();\n  const [intangibleRevenue, setIntangibleRevenue] = useState();\n  const [potentialRevenue, setPotentialRevenue] = useState();\n\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n\n    const json = JSON.stringify({\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost,\n\n      \"salesRevenue\": salesRevenue,\n      \"intangibleRevenue\": intangibleRevenue,\n      \"potentialRevenue\": potentialRevenue,\n    });\n\n    // let status = await service.loginUser(json);\n    // event.preventDefault();\n\n    // if(status != \"\") {\n    //   history.push(\"/input\");\n    // }\n    // else {\n    //   alert(\"An account with that username and password could not be found.\");\n    // }\n\n  }\n\n  const onChangeDirectCost = (event) => {\n    setDirectCost(event.target.value);\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n\n\n  const onChangeSalesRevenue = (event) => {\n    setSalesRevenue(event.target.value);\n  }\n  const onChangeIntangibleRevenue = (event) => {\n    setIntangibleRevenue(event.target.value);\n  }\n  const onChangePotentialRevenue= (event) => {\n    setPotentialRevenue(event.target.value);\n  }\n\n  return (\n    <section>\n      <Container maxWidth=\"xs\">\n        {/* <Box pt={8} pb={10}  align=\"right\"> */}\n        {/* <Box mb={3} textAlign=\"center\">\n        <Typography variant=\"h5\" component=\"h2\">Cost Streams</Typography>\n        </Box> */}\n          <Box>\n            <ValidatorForm onSubmit={handleSubmit} onError={errors => console.log(errors)}>\n              <div>\n                <Box mb={3} textAlign=\"center\">\n                  <Typography variant=\"h5\" component=\"h2\">Cost Streams</Typography>\n                </Box>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth \n                      label=\"Direct Cost *\" \n                      onChange={onChangeDirectCost} \n                      name=\"directCost\"\n                      value={directCost}\n                      validators={['required', 'matchRegexp:^[$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?$]']}\n                      errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth \n                      label=\"Indirect Cost *\" \n                      onChange={onChangeIndirectCost} \n                      name=\"indirectCost\"\n                      value={indirectCost}\n                      validators={['required', 'matchRegexp:^[0-9]+$]']}\n                      errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth \n                      label=\"Intangible Cost\" \n                      onChange={onChangeIntangibleCost} \n                      name=\"intangibleCost\"\n                      value={intangibleCost}\n                      validators={['matchRegexp:^[0-9]+$]']}\n                      errorMessages={['Must be a valid number']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth \n                      label=\"Opportunity Cost\" \n                      onChange={onChangeOpportunityCost} \n                      name=\"opportunityCost\"\n                      value={opportunityCost}\n                      validators={['matchRegexp:^[0-9]+$]']}\n                      errorMessages={['Must be a valid number']}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextValidator variant=\"outlined\" fullWidth \n                      label=\"Potential Risk Cost\" \n                      onChange={onChangePotentialRiskCost} \n                      name=\"potentialRiskCost\"\n                      value={potentialRiskCost}\n                      validators={['matchRegexp:^[0-9]+$]']}\n                      errorMessages={['Must be a valid number']}\n                    />\n                  </Grid>\n                </Grid>\n                </div>\n\n                <div>\n                  <Box mb={3} textAlign=\"center\">\n                    <Typography variant=\"h5\" component=\"h2\">Revenue Streams</Typography>\n                  </Box>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextValidator variant=\"outlined\" fullWidth \n                        label=\"Sales Revenue *\" \n                        onChange={onChangeSalesRevenue} \n                        name=\"salesRevenue\"\n                        value={salesRevenue}\n                        validators={['required', 'matchRegexp:^[0-9]+$]']}\n                        errorMessages={['This field is required', 'Must be a valid number']}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextValidator variant=\"outlined\" fullWidth \n                        label=\"Intangible Revenue\" \n                        onChange={onChangeIntangibleRevenue} \n                        name=\"intangibleRevenue\"\n                        value={intangibleRevenue}\n                        validators={['matchRegexp:^[0-9]+$]']}\n                        errorMessages={['Must be a valid number']}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextValidator variant=\"outlined\" fullWidth \n                        label=\"Potential Revenue\" \n                        onChange={onChangePotentialRevenue} \n                        name=\"potentialRevenue\"\n                        value={potentialRevenue}\n                        validators={['matchRegexp:^[0-9]+$]']}\n                        errorMessages={['Must be a valid number']}\n                      />\n                    </Grid>\n                  </Grid>\n                </div>\n            </ValidatorForm>\n          </Box>\n        {/* </Box> */}\n      </Container>\n    </section>\n  );\n}"]},"metadata":{},"sourceType":"module"}