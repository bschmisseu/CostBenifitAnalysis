{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nexport default function InputPage(props) {\n  _s();\n\n  const [directCost, setDirectCost] = useState();\n  const [indirectCost, setIndirectCost] = useState();\n  const [intangibleCost, setIntangibleCost] = useState();\n  const [opportunityCost, setOpportunityCost] = useState();\n  const [potentialRiskCost, setPotentialRiskCost] = useState();\n  const [salesRevenue, setSalesRevenue] = useState();\n  const [intangibleRevenue, setIntangibleRevenue] = useState();\n  const [potentialRevenue, setPotentialRevenue] = useState();\n\n  const onChangeDirectCost = event => {\n    setDirectCost(event.target.value);\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  const onChangeSalesRevenue = event => {\n    setSalesRevenue(event.target.value);\n  };\n\n  const onChangeIntangibleRevenue = event => {\n    setIntangibleRevenue(event.target.value);\n  };\n\n  const onChangePotentialRevenue = event => {\n    setPotentialRevenue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureTwoColumns, {\n      bucket1: [/*#__PURE__*/_jsxDEV(InputCost, {\n        directCost: directCost,\n        onChangeDirectCost: onChangeDirectCost,\n        indirectCost: indirectCost,\n        onChangeIndirectCost: onChangeIndirectCost,\n        intangibleCost: intangibleCost,\n        onChangeIntangibleCost: onChangeIntangibleCost,\n        opportunityCost: opportunityCost,\n        onChangeOpportunityCost: onChangeOpportunityCost,\n        potentialRiskCost: potentialRiskCost,\n        onChangePotentialRiskCost: onChangePotentialRiskCost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this)],\n      bucket2: [/*#__PURE__*/_jsxDEV(InputRevenue, {\n        salesRevenue: salesRevenue,\n        onChangeSalesRevenue: onChangeSalesRevenue,\n        intangibleRevenue: intangibleRevenue,\n        onChangeIntangibleRevenue: onChangeIntangibleRevenue,\n        potentialRevenue: potentialRevenue,\n        onChangePotentialRevenue: onChangePotentialRevenue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureContainer, {\n      bucket1: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n} // let history = useHistory();\n// const handleSubmit = async () => {\n//   const json = JSON.stringify({\n//     \"directCost\": directCost,\n//     \"indirectCost\": indirectCost,\n//     \"intangibleCost\": intangibleCost,\n//     \"opportunityCost\": opportunityCost,\n//     \"potentialRiskCost\": potentialRiskCost\n//   });\n//   let status = await service.loginUser(json);\n//   event.preventDefault();\n//   if(status != \"\") {\n//     history.push(\"/input\");\n//   }\n//   else {\n//     alert(\"An account with that username and password could not be found.\");\n//   }\n// }\n\n_s(InputPage, \"K2UUNg3Bog0eXVVO3o9KLZhdueo=\");\n\n_c = InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js"],"names":["React","NavbarEmpty","StructureTwoColumns","StructureContainer","InputCost","InputRevenue","Button","InputPage","props","directCost","setDirectCost","useState","indirectCost","setIndirectCost","intangibleCost","setIntangibleCost","opportunityCost","setOpportunityCost","potentialRiskCost","setPotentialRiskCost","salesRevenue","setSalesRevenue","intangibleRevenue","setIntangibleRevenue","potentialRevenue","setPotentialRevenue","onChangeDirectCost","event","target","value","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","onChangeSalesRevenue","onChangeIntangibleRevenue","onChangePotentialRevenue"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default function InputPage(props) {\n\n  const [directCost, setDirectCost] = useState();\n  const [indirectCost, setIndirectCost] = useState();\n  const [intangibleCost, setIntangibleCost] = useState();\n  const [opportunityCost, setOpportunityCost] = useState();\n  const [potentialRiskCost, setPotentialRiskCost] = useState();\n  const [salesRevenue, setSalesRevenue] = useState();\n  const [intangibleRevenue, setIntangibleRevenue] = useState();\n  const [potentialRevenue, setPotentialRevenue] = useState();\n\n\n  const onChangeDirectCost = (event) => {\n    setDirectCost(event.target.value);\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n  const onChangeSalesRevenue = (event) => {\n    setSalesRevenue(event.target.value);\n  }\n  const onChangeIntangibleRevenue = (event) => {\n    setIntangibleRevenue(event.target.value);\n  }\n  const onChangePotentialRevenue = (event) => {\n    setPotentialRevenue(event.target.value);\n  }\n\n  return (\n    <React.Fragment>\n      <NavbarEmpty />\n      <StructureTwoColumns\n        bucket1={[<InputCost \n          directCost  = {directCost}\n          onChangeDirectCost = {onChangeDirectCost}\n          indirectCost = {indirectCost}\n          onChangeIndirectCost = {onChangeIndirectCost}\n          intangibleCost = {intangibleCost}\n          onChangeIntangibleCost = {onChangeIntangibleCost}\n          opportunityCost = {opportunityCost}\n          onChangeOpportunityCost = {onChangeOpportunityCost}\n          potentialRiskCost = {potentialRiskCost}\n          onChangePotentialRiskCost = {onChangePotentialRiskCost}\n          />]}\n        bucket2={[<InputRevenue \n            salesRevenue = {salesRevenue}\n            onChangeSalesRevenue = {onChangeSalesRevenue}\n            intangibleRevenue = {intangibleRevenue}\n            onChangeIntangibleRevenue = {onChangeIntangibleRevenue}\n            potentialRevenue = {potentialRevenue}\n            onChangePotentialRevenue = {onChangePotentialRevenue}\n          />]}\n      />\n\n\n      <StructureContainer bucket1={[<Button color=\"primary\" variant=\"contained\">Calculate</Button>]} />\n\n    </React.Fragment>\n  );\n}\n\n\n\n\n// let history = useHistory();\n\n// const handleSubmit = async () => {\n\n//   const json = JSON.stringify({\n//     \"directCost\": directCost,\n//     \"indirectCost\": indirectCost,\n//     \"intangibleCost\": intangibleCost,\n//     \"opportunityCost\": opportunityCost,\n//     \"potentialRiskCost\": potentialRiskCost\n//   });\n\n//   let status = await service.loginUser(json);\n//   event.preventDefault();\n\n//   if(status != \"\") {\n//     history.push(\"/input\");\n//   }\n//   else {\n//     alert(\"An account with that username and password could not be found.\");\n//   }\n\n// }\n\n"]},"metadata":{},"sourceType":"module"}