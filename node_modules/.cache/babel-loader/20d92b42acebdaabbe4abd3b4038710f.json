{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nexport default function InputPage(props) {\n  _s();\n\n  this.state = {\n    directCost: 0,\n    indirectCost: 0,\n    intangibleCost: 0,\n    opportunityCost: 0,\n    potentialRiskCost: 0,\n    salesRevenue: 0,\n    intangibleRevenue: 0,\n    potentialRevenue: 0\n  };\n  const [directCost, setDirectCost] = React.useState();\n  const [indirectCost, setIndirectCost] = React.useState();\n  const [intangibleCost, setIntangibleCost] = React.useState();\n  const [opportunityCost, setOpportunityCost] = React.useState();\n  const [potentialRiskCost, setPotentialRiskCost] = React.useState();\n  const [salesRevenue, setSalesRevenue] = React.useState();\n  const [intangibleRevenue, setIntangibleRevenue] = React.useState();\n  const [potentialRevenue, setPotentialRevenue] = React.useState();\n\n  const onChangeDirectCost = event => {\n    // if (event.target.value.match('^[0-9]')) {\n    //   event.target.setState({ errorText: '' })\n    //   setDirectCost(event.target.value);\n    // } else {\n    //   event.target.setState({ errorText: 'Invalid format: ###-###-####' })\n    // }\n    setDirectCost(event.target.value);\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  const onChangeSalesRevenue = event => {\n    setSalesRevenue(event.target.value);\n  };\n\n  const onChangeIntangibleRevenue = event => {\n    setIntangibleRevenue(event.target.value);\n  };\n\n  const onChangePotentialRevenue = event => {\n    setPotentialRevenue(event.target.value);\n  }; // let history = useHistory();\n\n\n  const handleSubmit = async () => {\n    console.log(directCost);\n    console.log(salesRevenue);\n    const json = JSON.stringify({\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost\n    }); // let status = await service.loginUser(json);\n    // event.preventDefault();\n    // if(status != \"\") {\n    //   history.push(\"/input\");\n    // }\n    // else {\n    //   alert(\"An account with that username and password could not be found.\");\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureTwoColumns, {\n      bucket1: [/*#__PURE__*/_jsxDEV(InputCost, {\n        directCost: directCost,\n        onChangeDirectCost: onChangeDirectCost,\n        indirectCost: indirectCost,\n        onChangeIndirectCost: onChangeIndirectCost,\n        intangibleCost: intangibleCost,\n        onChangeIntangibleCost: onChangeIntangibleCost,\n        opportunityCost: opportunityCost,\n        onChangeOpportunityCost: onChangeOpportunityCost,\n        potentialRiskCost: potentialRiskCost,\n        onChangePotentialRiskCost: onChangePotentialRiskCost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this)],\n      bucket2: [/*#__PURE__*/_jsxDEV(InputRevenue, {\n        salesRevenue: salesRevenue,\n        onChangeSalesRevenue: onChangeSalesRevenue,\n        intangibleRevenue: intangibleRevenue,\n        onChangeIntangibleRevenue: onChangeIntangibleRevenue,\n        potentialRevenue: potentialRevenue,\n        onChangePotentialRevenue: onChangePotentialRevenue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureContainer, {\n      bucket1: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onSubmit: handleSubmit,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputPage, \"K2UUNg3Bog0eXVVO3o9KLZhdueo=\");\n\n_c = InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js"],"names":["React","NavbarEmpty","StructureTwoColumns","StructureContainer","InputCost","InputRevenue","Button","InputPage","props","state","directCost","indirectCost","intangibleCost","opportunityCost","potentialRiskCost","salesRevenue","intangibleRevenue","potentialRevenue","setDirectCost","useState","setIndirectCost","setIntangibleCost","setOpportunityCost","setPotentialRiskCost","setSalesRevenue","setIntangibleRevenue","setPotentialRevenue","onChangeDirectCost","event","target","value","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","onChangeSalesRevenue","onChangeIntangibleRevenue","onChangePotentialRevenue","handleSubmit","console","log","json","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default function InputPage(props) {\n\n  this.state = {\n    directCost: 0,\n    indirectCost: 0,\n    intangibleCost: 0,\n    opportunityCost: 0,\n    potentialRiskCost: 0,\n    salesRevenue: 0,\n    intangibleRevenue: 0,\n    potentialRevenue: 0\n  }\n\n  const [directCost, setDirectCost] = React.useState();\n  const [indirectCost, setIndirectCost] = React.useState();\n  const [intangibleCost, setIntangibleCost] = React.useState();\n  const [opportunityCost, setOpportunityCost] = React.useState();\n  const [potentialRiskCost, setPotentialRiskCost] = React.useState();\n  const [salesRevenue, setSalesRevenue] = React.useState();\n  const [intangibleRevenue, setIntangibleRevenue] = React.useState();\n  const [potentialRevenue, setPotentialRevenue] = React.useState();\n\n\n  const onChangeDirectCost = (event) => {\n    // if (event.target.value.match('^[0-9]')) {\n    //   event.target.setState({ errorText: '' })\n    //   setDirectCost(event.target.value);\n    // } else {\n    //   event.target.setState({ errorText: 'Invalid format: ###-###-####' })\n    // }\n\n    setDirectCost(event.target.value);\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n  const onChangeSalesRevenue = (event) => {\n    setSalesRevenue(event.target.value);\n  }\n  const onChangeIntangibleRevenue = (event) => {\n    setIntangibleRevenue(event.target.value);\n  }\n  const onChangePotentialRevenue = (event) => {\n    setPotentialRevenue(event.target.value);\n  }\n\n  // let history = useHistory();\n\n  const handleSubmit = async () => {\n\n    console.log(directCost);\n    console.log(salesRevenue);\n\n  const json = JSON.stringify({\n    \"directCost\": directCost,\n    \"indirectCost\": indirectCost,\n    \"intangibleCost\": intangibleCost,\n    \"opportunityCost\": opportunityCost,\n    \"potentialRiskCost\": potentialRiskCost\n  });\n\n  // let status = await service.loginUser(json);\n  // event.preventDefault();\n\n  // if(status != \"\") {\n  //   history.push(\"/input\");\n  // }\n  // else {\n  //   alert(\"An account with that username and password could not be found.\");\n  // }\n\n}\n\n  return (\n    <React.Fragment>\n      <NavbarEmpty />\n      <StructureTwoColumns\n        bucket1={[<InputCost \n          directCost  = {directCost}\n          onChangeDirectCost = {onChangeDirectCost}\n          indirectCost = {indirectCost}\n          onChangeIndirectCost = {onChangeIndirectCost}\n          intangibleCost = {intangibleCost}\n          onChangeIntangibleCost = {onChangeIntangibleCost}\n          opportunityCost = {opportunityCost}\n          onChangeOpportunityCost = {onChangeOpportunityCost}\n          potentialRiskCost = {potentialRiskCost}\n          onChangePotentialRiskCost = {onChangePotentialRiskCost}\n          />]}\n        bucket2={[<InputRevenue \n            salesRevenue = {salesRevenue}\n            onChangeSalesRevenue = {onChangeSalesRevenue}\n            intangibleRevenue = {intangibleRevenue}\n            onChangeIntangibleRevenue = {onChangeIntangibleRevenue}\n            potentialRevenue = {potentialRevenue}\n            onChangePotentialRevenue = {onChangePotentialRevenue}\n          />]}\n      />\n\n\n      <StructureContainer bucket1={[<Button color=\"primary\" variant=\"contained\" onSubmit={handleSubmit}>Calculate</Button>]} />\n\n    </React.Fragment>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}