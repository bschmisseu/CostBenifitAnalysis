{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/components/InputCost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nexport default function Component(props) {\n  _s();\n\n  const [directCost, setDirectCost] = useState();\n  const [indirectCost, setIndirectCost] = useState();\n  const [intangibleCost, setIntangibleCost] = useState();\n  const [opportunityCost, setOpportunityCost] = useState();\n  const [potentialRiskCost, setPotentialRiskCost] = useState();\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n    const json = JSON.stringify({\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost\n    }); // let status = await service.loginUser(json);\n    // event.preventDefault();\n    // if(status != \"\") {\n    //   history.push(\"/input\");\n    // }\n    // else {\n    //   alert(\"An account with that username and password could not be found.\");\n    // }\n  };\n\n  const onChangeDirectCost = event => {\n    setDirectCost(event.target.value);\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        pt: 8,\n        pb: 10,\n        align: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Cost Streams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n            onSubmit: handleSubmit,\n            onError: errors => console.log(errors),\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Direct Cost\",\n                  onChange: onChangeDirectCost,\n                  name: \"directCost\",\n                  value: directCost,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Indirect Cost\",\n                  onChange: onChangeIndirectCost,\n                  name: \"indirectCost\",\n                  value: indirectCost,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Intangible Cost\",\n                  onChange: onChangeIntangibleCost,\n                  name: \"intangibleCost\",\n                  value: intangibleCost,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Opportunity Cost\",\n                  onChange: onChangeOpportunityCost,\n                  name: \"opportunityCost\",\n                  value: opportunityCost,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  label: \"Potential Risk Cost\",\n                  onChange: onChangePotentialRiskCost,\n                  name: \"potentialRiskCost\",\n                  value: potentialRiskCost,\n                  validators: ['required', 'matchRegexp:^[0-9]+$]'],\n                  errorMessages: ['This field is required', 'Must be a valid number']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Component, \"lVMAFC5fx5ud4qiUwkvgwiwQFtA=\", true);\n\n_c = Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/components/InputCost.js"],"names":["React","Container","Box","Typography","Grid","TextField","Component","props","directCost","setDirectCost","useState","indirectCost","setIndirectCost","intangibleCost","setIntangibleCost","opportunityCost","setOpportunityCost","potentialRiskCost","setPotentialRiskCost","history","useHistory","handleSubmit","json","JSON","stringify","onChangeDirectCost","event","target","value","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","errors","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Component(props) {\n\n  const [directCost, setDirectCost] = useState();\n  const [indirectCost, setIndirectCost] = useState();\n  const [intangibleCost, setIntangibleCost] = useState();\n  const [opportunityCost, setOpportunityCost] = useState();\n  const [potentialRiskCost, setPotentialRiskCost] = useState();\n\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n\n    const json = JSON.stringify({\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost\n    });\n\n    // let status = await service.loginUser(json);\n    // event.preventDefault();\n\n    // if(status != \"\") {\n    //   history.push(\"/input\");\n    // }\n    // else {\n    //   alert(\"An account with that username and password could not be found.\");\n    // }\n\n  }\n\n  const onChangeDirectCost = (event) => {\n    setDirectCost(event.target.value);\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n\n  return (\n    <section>\n      <Container maxWidth=\"xs\">\n        <Box pt={8} pb={10}  align=\"right\">\n          <Box mb={3} textAlign=\"center\">\n            <Typography variant=\"h5\" component=\"h2\">Cost Streams</Typography>\n          </Box>\n          <Box>\n\n            <ValidatorForm onSubmit={handleSubmit} onError={errors => console.log(errors)}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextValidator variant=\"outlined\" fullWidth \n                    label=\"Direct Cost\" \n                    onChange={onChangeDirectCost} \n                    name=\"directCost\"\n                    value={directCost}\n                    validators={['required', 'matchRegexp:^[0-9]+$]']}\n                    errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextValidator variant=\"outlined\" fullWidth \n                    label=\"Indirect Cost\" \n                    onChange={onChangeIndirectCost} \n                    name=\"indirectCost\"\n                    value={indirectCost}\n                    validators={['required', 'matchRegexp:^[0-9]+$]']}\n                    errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextValidator variant=\"outlined\" fullWidth \n                    label=\"Intangible Cost\" \n                    onChange={onChangeIntangibleCost} \n                    name=\"intangibleCost\"\n                    value={intangibleCost}\n                    validators={['required', 'matchRegexp:^[0-9]+$]']}\n                    errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextValidator variant=\"outlined\" fullWidth \n                    label=\"Opportunity Cost\" \n                    onChange={onChangeOpportunityCost} \n                    name=\"opportunityCost\"\n                    value={opportunityCost}\n                    validators={['required', 'matchRegexp:^[0-9]+$]']}\n                    errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n               </Grid>\n                <Grid item xs={12}>\n                  <TextValidator variant=\"outlined\" fullWidth \n                    label=\"Potential Risk Cost\" \n                    onChange={onChangePotentialRiskCost} \n                    name=\"potentialRiskCost\"\n                    value={potentialRiskCost}\n                    validators={['required', 'matchRegexp:^[0-9]+$]']}\n                    errorMessages={['This field is required', 'Must be a valid number']}\n                    />\n                </Grid>\n              </Grid>\n            </ValidatorForm>\n\n          </Box>\n        </Box>\n      </Container>\n    </section>\n  );\n}"]},"metadata":{},"sourceType":"module"}