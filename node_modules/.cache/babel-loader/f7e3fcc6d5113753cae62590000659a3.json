{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nexport default function InputPage(props) {\n  _s();\n\n  const [directCost, setDirectCost] = React.useState();\n  const [indirectCost, setIndirectCost] = React.useState();\n  const [intangibleCost, setIntangibleCost] = React.useState();\n  const [opportunityCost, setOpportunityCost] = React.useState();\n  const [potentialRiskCost, setPotentialRiskCost] = React.useState();\n  const [salesRevenue, setSalesRevenue] = React.useState();\n  const [intangibleRevenue, setIntangibleRevenue] = React.useState();\n  const [potentialRevenue, setPotentialRevenue] = React.useState();\n  const [errorText, setErrorText] = React.useState();\n\n  const onChangeDirectCost = event => {\n    if (event.target.value.match('^[0-9]')) {\n      setErrorText({\n        errorText: ''\n      });\n      setDirectCost(event.target.value);\n    } else {\n      setErrorText({\n        errorText: 'Invalid format: ###-###-####'\n      });\n    }\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  const onChangeSalesRevenue = event => {\n    setSalesRevenue(event.target.value);\n  };\n\n  const onChangeIntangibleRevenue = event => {\n    setIntangibleRevenue(event.target.value);\n  };\n\n  const onChangePotentialRevenue = event => {\n    setPotentialRevenue(event.target.value);\n  }; // let history = useHistory();\n\n\n  const handleSubmit = async () => {\n    console.log(directCost);\n    console.log(salesRevenue);\n    const json = JSON.stringify({\n      \"directCost\": directCost,\n      \"indirectCost\": indirectCost,\n      \"intangibleCost\": intangibleCost,\n      \"opportunityCost\": opportunityCost,\n      \"potentialRiskCost\": potentialRiskCost\n    }); // let status = await service.loginUser(json);\n    // event.preventDefault();\n    // if(status != \"\") {\n    //   history.push(\"/input\");\n    // }\n    // else {\n    //   alert(\"An account with that username and password could not be found.\");\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureTwoColumns, {\n      bucket1: [/*#__PURE__*/_jsxDEV(InputCost, {\n        directCost: directCost,\n        onChangeDirectCost: onChangeDirectCost,\n        indirectCost: indirectCost,\n        onChangeIndirectCost: onChangeIndirectCost,\n        intangibleCost: intangibleCost,\n        onChangeIntangibleCost: onChangeIntangibleCost,\n        opportunityCost: opportunityCost,\n        onChangeOpportunityCost: onChangeOpportunityCost,\n        potentialRiskCost: potentialRiskCost,\n        onChangePotentialRiskCost: onChangePotentialRiskCost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this)],\n      bucket2: [/*#__PURE__*/_jsxDEV(InputRevenue, {\n        salesRevenue: salesRevenue,\n        onChangeSalesRevenue: onChangeSalesRevenue,\n        intangibleRevenue: intangibleRevenue,\n        onChangeIntangibleRevenue: onChangeIntangibleRevenue,\n        potentialRevenue: potentialRevenue,\n        onChangePotentialRevenue: onChangePotentialRevenue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureContainer, {\n      bucket1: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onSubmit: handleSubmit,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputPage, \"6ukGPkiuVP2dqcnR/8Nk3MH45ko=\");\n\n_c = InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/hollandaucoin/vscode-workspace/workspace-CST452/CostBenefitFrontend/src/pages/InputPage.js"],"names":["React","NavbarEmpty","StructureTwoColumns","StructureContainer","InputCost","InputRevenue","Button","InputPage","props","directCost","setDirectCost","useState","indirectCost","setIndirectCost","intangibleCost","setIntangibleCost","opportunityCost","setOpportunityCost","potentialRiskCost","setPotentialRiskCost","salesRevenue","setSalesRevenue","intangibleRevenue","setIntangibleRevenue","potentialRevenue","setPotentialRevenue","errorText","setErrorText","onChangeDirectCost","event","target","value","match","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","onChangeSalesRevenue","onChangeIntangibleRevenue","onChangePotentialRevenue","handleSubmit","console","log","json","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;AACA,OAAOC,kBAAP,MAA+B,+CAA/B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,EAApC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,KAAK,CAACW,QAAN,EAAxC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCf,KAAK,CAACW,QAAN,EAA5C;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCjB,KAAK,CAACW,QAAN,EAA9C;AACA,QAAM,CAACO,iBAAD,EAAoBC,oBAApB,IAA4CnB,KAAK,CAACW,QAAN,EAAlD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCrB,KAAK,CAACW,QAAN,EAAxC;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CvB,KAAK,CAACW,QAAN,EAAlD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0CzB,KAAK,CAACW,QAAN,EAAhD;AAEA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4B3B,KAAK,CAACW,QAAN,EAAlC;;AAGA,QAAMiB,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,QAAzB,CAAJ,EAAwC;AACtCL,MAAAA,YAAY,CAAC;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAZ;AACAhB,MAAAA,aAAa,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,KAHD,MAGO;AACLJ,MAAAA,YAAY,CAAC;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAZ;AACD;AACF,GAPD;;AAQA,QAAMO,oBAAoB,GAAIJ,KAAD,IAAW;AACtChB,IAAAA,eAAe,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,QAAMG,sBAAsB,GAAIL,KAAD,IAAW;AACxCd,IAAAA,iBAAiB,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAGA,QAAMI,uBAAuB,GAAIN,KAAD,IAAW;AACzCZ,IAAAA,kBAAkB,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD;;AAGA,QAAMK,yBAAyB,GAAIP,KAAD,IAAW;AAC3CV,IAAAA,oBAAoB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACD,GAFD;;AAGA,QAAMM,oBAAoB,GAAIR,KAAD,IAAW;AACtCR,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,QAAMO,yBAAyB,GAAIT,KAAD,IAAW;AAC3CN,IAAAA,oBAAoB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACD,GAFD;;AAGA,QAAMQ,wBAAwB,GAAIV,KAAD,IAAW;AAC1CJ,IAAAA,mBAAmB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD,CAxCuC,CA4CvC;;;AAEA,QAAMS,YAAY,GAAG,YAAY;AAE/BC,IAAAA,OAAO,CAACC,GAAR,CAAYjC,UAAZ;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAZ;AAEF,UAAMuB,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1B,oBAAcpC,UADY;AAE1B,sBAAgBG,YAFU;AAG1B,wBAAkBE,cAHQ;AAI1B,yBAAmBE,eAJO;AAK1B,2BAAqBE;AALK,KAAf,CAAb,CALiC,CAajC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAED,GAvBC;;AAyBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AACE,MAAA,OAAO,EAAE,cAAC,QAAC,SAAD;AACR,QAAA,UAAU,EAAKT,UADP;AAER,QAAA,kBAAkB,EAAImB,kBAFd;AAGR,QAAA,YAAY,EAAIhB,YAHR;AAIR,QAAA,oBAAoB,EAAIqB,oBAJhB;AAKR,QAAA,cAAc,EAAInB,cALV;AAMR,QAAA,sBAAsB,EAAIoB,sBANlB;AAOR,QAAA,eAAe,EAAIlB,eAPX;AAQR,QAAA,uBAAuB,EAAImB,uBARnB;AASR,QAAA,iBAAiB,EAAIjB,iBATb;AAUR,QAAA,yBAAyB,EAAIkB;AAVrB;AAAA;AAAA;AAAA;AAAA,cAAD,CADX;AAaE,MAAA,OAAO,EAAE,cAAC,QAAC,YAAD;AACN,QAAA,YAAY,EAAIhB,YADV;AAEN,QAAA,oBAAoB,EAAIiB,oBAFlB;AAGN,QAAA,iBAAiB,EAAIf,iBAHf;AAIN,QAAA,yBAAyB,EAAIgB,yBAJvB;AAKN,QAAA,gBAAgB,EAAId,gBALd;AAMN,QAAA,wBAAwB,EAAIe;AANtB;AAAA;AAAA;AAAA;AAAA,cAAD;AAbX;AAAA;AAAA;AAAA;AAAA,YAFF,eA0BE,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAE,cAAC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAC,WAAhC;AAA4C,QAAA,QAAQ,EAAEC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAtGuBjC,S;;KAAAA,S","sourcesContent":["import React from 'react';\n\nimport NavbarEmpty from '../components/NavbarEmpty';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default function InputPage(props) {\n\n  const [directCost, setDirectCost] = React.useState();\n  const [indirectCost, setIndirectCost] = React.useState();\n  const [intangibleCost, setIntangibleCost] = React.useState();\n  const [opportunityCost, setOpportunityCost] = React.useState();\n  const [potentialRiskCost, setPotentialRiskCost] = React.useState();\n  const [salesRevenue, setSalesRevenue] = React.useState();\n  const [intangibleRevenue, setIntangibleRevenue] = React.useState();\n  const [potentialRevenue, setPotentialRevenue] = React.useState();\n\n  const [errorText, setErrorText] = React.useState();\n\n\n  const onChangeDirectCost = (event) => {\n    if (event.target.value.match('^[0-9]')) {\n      setErrorText({ errorText: '' })\n      setDirectCost(event.target.value);\n    } else {\n      setErrorText({ errorText: 'Invalid format: ###-###-####' })\n    }\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n  const onChangeSalesRevenue = (event) => {\n    setSalesRevenue(event.target.value);\n  }\n  const onChangeIntangibleRevenue = (event) => {\n    setIntangibleRevenue(event.target.value);\n  }\n  const onChangePotentialRevenue = (event) => {\n    setPotentialRevenue(event.target.value);\n  }\n\n  // let history = useHistory();\n\n  const handleSubmit = async () => {\n\n    console.log(directCost);\n    console.log(salesRevenue);\n\n  const json = JSON.stringify({\n    \"directCost\": directCost,\n    \"indirectCost\": indirectCost,\n    \"intangibleCost\": intangibleCost,\n    \"opportunityCost\": opportunityCost,\n    \"potentialRiskCost\": potentialRiskCost\n  });\n\n  // let status = await service.loginUser(json);\n  // event.preventDefault();\n\n  // if(status != \"\") {\n  //   history.push(\"/input\");\n  // }\n  // else {\n  //   alert(\"An account with that username and password could not be found.\");\n  // }\n\n}\n\n  return (\n    <React.Fragment>\n      <NavbarEmpty />\n      <StructureTwoColumns\n        bucket1={[<InputCost \n          directCost  = {directCost}\n          onChangeDirectCost = {onChangeDirectCost}\n          indirectCost = {indirectCost}\n          onChangeIndirectCost = {onChangeIndirectCost}\n          intangibleCost = {intangibleCost}\n          onChangeIntangibleCost = {onChangeIntangibleCost}\n          opportunityCost = {opportunityCost}\n          onChangeOpportunityCost = {onChangeOpportunityCost}\n          potentialRiskCost = {potentialRiskCost}\n          onChangePotentialRiskCost = {onChangePotentialRiskCost}\n          />]}\n        bucket2={[<InputRevenue \n            salesRevenue = {salesRevenue}\n            onChangeSalesRevenue = {onChangeSalesRevenue}\n            intangibleRevenue = {intangibleRevenue}\n            onChangeIntangibleRevenue = {onChangeIntangibleRevenue}\n            potentialRevenue = {potentialRevenue}\n            onChangePotentialRevenue = {onChangePotentialRevenue}\n          />]}\n      />\n\n\n      <StructureContainer bucket1={[<Button color=\"primary\" variant=\"contained\" onSubmit={handleSubmit}>Calculate</Button>]} />\n\n    </React.Fragment>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}