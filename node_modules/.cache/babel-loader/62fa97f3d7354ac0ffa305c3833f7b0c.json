{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryceschmisseur/Desktop/CostBenefitFrontend/src/pages/InputPagePast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport User from \"./../models/User\";\nimport Entry from \"./../models/Entry\";\nimport service from './../service/EntryService';\nimport { EntryContext } from './../context/EntryContext';\nexport default function InputPage(props) {\n  _s();\n\n  const [entry, setEntryContext] = useContext(EntryContext);\n  const [name, setName] = useState(entry.name);\n  console.log(entry.cost[0]);\n  const [directCost, setDirectCost] = useState(entry.cost[0].toString()); //   const [indirectCost, setIndirectCost] = useState(entry.cost[1]);\n  //   const [intangibleCost, setIntangibleCost] = useState(entry.cost[2]);\n  //   const [opportunityCost, setOpportunityCost] = useState(entry.cost[3]);\n  //   const [potentialRiskCost, setPotentialRiskCost] = useState(entry.cost[4]);\n  //   const [salesRevenue, setSalesRevenue] = useState(entry.revenues[0]);\n  //   const [intangibleRevenue, setIntangibleRevenue] = useState(entry.revenues[1]);\n  //   const [potentialRevenue, setPotentialRevenue] = useState(entry.revenues[2]);\n  // const [directCost, setDirectCost] = useState('');\n\n  const [indirectCost, setIndirectCost] = useState('');\n  const [intangibleCost, setIntangibleCost] = useState('');\n  const [opportunityCost, setOpportunityCost] = useState('');\n  const [potentialRiskCost, setPotentialRiskCost] = useState('');\n  const [salesRevenue, setSalesRevenue] = useState('');\n  const [intangibleRevenue, setIntangibleRevenue] = useState('');\n  const [potentialRevenue, setPotentialRevenue] = useState('');\n\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const onChangeDirectCost = event => {\n    setDirectCost(event.target.value);\n  };\n\n  const onChangeIndirectCost = event => {\n    setIndirectCost(event.target.value);\n  };\n\n  const onChangeIntangibleCost = event => {\n    setIntangibleCost(event.target.value);\n  };\n\n  const onChangeOpportunityCost = event => {\n    setOpportunityCost(event.target.value);\n  };\n\n  const onChangePotentialRiskCost = event => {\n    setPotentialRiskCost(event.target.value);\n  };\n\n  const onChangeSalesRevenue = event => {\n    setSalesRevenue(event.target.value);\n  };\n\n  const onChangeIntangibleRevenue = event => {\n    setIntangibleRevenue(event.target.value);\n  };\n\n  const onChangePotentialRevenue = event => {\n    setPotentialRevenue(event.target.value);\n  };\n\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n    let json = JSON.stringify({\n      \"_id\": entry._id,\n      \"name\": name,\n      \"cost\": [directCost, indirectCost, intangibleCost, intangibleCost, opportunityCost, potentialRiskCost],\n      \"revenues\": [salesRevenue, intangibleRevenue, potentialRevenue],\n      \"_userId\": User._id\n    });\n    let status = await service.createEntry(json);\n    event.preventDefault();\n\n    if (status != \"\") {\n      json = JSON.stringify({\n        \"_userId\": User._id\n      });\n      User.entries = await service.getUserEntries(json);\n      Entry._id = status[\"_id\"];\n      Entry.name = status[\"name\"];\n      Entry.cost = status[\"cost\"];\n      Entry.revenues = status[\"revenues\"];\n      Entry._userId = status[\"_userId\"];\n      Entry.ratio = status[\"ratio\"];\n      Entry.netProfit = status[\"netProfit\"];\n      history.push(\"/output\");\n    } else {\n      alert(\"Failed to create entry.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: 5,\n      pb: 0,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mb: 4,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          children: \"Entry Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          style: {\n            width: \"300px\"\n          },\n          label: \"Entry Name *\",\n          onChange: props.onChangeName,\n          name: \"name\",\n          value: name,\n          error: name !== \"\" && !name.match(\"^[A-Za-z]\"),\n          helperText: name !== \"\" && !name.match(\"^[A-Za-z]\") ? \"Must be a valid name\" : \"\",\n          onChange: onChangeName,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureTwoColumns, {\n      bucket1: [/*#__PURE__*/_jsxDEV(InputCost, {\n        directCost: directCost,\n        onChangeDirectCost: onChangeDirectCost,\n        indirectCost: indirectCost,\n        onChangeIndirectCost: onChangeIndirectCost,\n        intangibleCost: intangibleCost,\n        onChangeIntangibleCost: onChangeIntangibleCost,\n        opportunityCost: opportunityCost,\n        onChangeOpportunityCost: onChangeOpportunityCost,\n        potentialRiskCost: potentialRiskCost,\n        onChangePotentialRiskCost: onChangePotentialRiskCost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }, this)],\n      bucket2: [/*#__PURE__*/_jsxDEV(InputRevenue, {\n        salesRevenue: salesRevenue,\n        onChangeSalesRevenue: onChangeSalesRevenue,\n        intangibleRevenue: intangibleRevenue,\n        onChangeIntangibleRevenue: onChangeIntangibleRevenue,\n        potentialRevenue: potentialRevenue,\n        onChangePotentialRevenue: onChangePotentialRevenue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StructureContainer, {\n      bucket1: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: handleSubmit,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputPage, \"o5be0CleWkoiGUWuvKyFULDzBls=\", false, function () {\n  return [useHistory];\n});\n\n_c = InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/CostBenefitFrontend/src/pages/InputPagePast.js"],"names":["React","useState","useContext","useHistory","Footer","Navbar","StructureTwoColumns","StructureContainer","InputCost","InputRevenue","Button","TextField","Box","Typography","User","Entry","service","EntryContext","InputPage","props","entry","setEntryContext","name","setName","console","log","cost","directCost","setDirectCost","toString","indirectCost","setIndirectCost","intangibleCost","setIntangibleCost","opportunityCost","setOpportunityCost","potentialRiskCost","setPotentialRiskCost","salesRevenue","setSalesRevenue","intangibleRevenue","setIntangibleRevenue","potentialRevenue","setPotentialRevenue","onChangeName","event","target","value","onChangeDirectCost","onChangeIndirectCost","onChangeIntangibleCost","onChangeOpportunityCost","onChangePotentialRiskCost","onChangeSalesRevenue","onChangeIntangibleRevenue","onChangePotentialRevenue","history","handleSubmit","json","JSON","stringify","_id","status","createEntry","preventDefault","entries","getUserEntries","revenues","_userId","ratio","netProfit","push","alert","width","match"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\n\nimport Navbar from '../components/Navbar';\nimport StructureTwoColumns from '../components/__structures/StructureTwoColumns';\nimport StructureContainer from '../components/__structures/StructureContainer';\nimport InputCost from '../components/InputCost';\nimport InputRevenue from '../components/InputRevenue';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport User from   \"./../models/User\";\nimport Entry from \"./../models/Entry\";\nimport service from './../service/EntryService';\nimport { EntryContext } from './../context/EntryContext';\n\nexport default function InputPage(props) {\n  const [entry, setEntryContext] = useContext(EntryContext);\n\n  const [name, setName] = useState(entry.name);\n  console.log(entry.cost[0]);\n  const [directCost, setDirectCost] = useState(entry.cost[0].toString());\n//   const [indirectCost, setIndirectCost] = useState(entry.cost[1]);\n//   const [intangibleCost, setIntangibleCost] = useState(entry.cost[2]);\n//   const [opportunityCost, setOpportunityCost] = useState(entry.cost[3]);\n//   const [potentialRiskCost, setPotentialRiskCost] = useState(entry.cost[4]);\n//   const [salesRevenue, setSalesRevenue] = useState(entry.revenues[0]);\n//   const [intangibleRevenue, setIntangibleRevenue] = useState(entry.revenues[1]);\n//   const [potentialRevenue, setPotentialRevenue] = useState(entry.revenues[2]);\n// const [directCost, setDirectCost] = useState('');\nconst [indirectCost, setIndirectCost] = useState('');\nconst [intangibleCost, setIntangibleCost] = useState('');\nconst [opportunityCost, setOpportunityCost] = useState('');\nconst [potentialRiskCost, setPotentialRiskCost] = useState('');\nconst [salesRevenue, setSalesRevenue] = useState('');\nconst [intangibleRevenue, setIntangibleRevenue] = useState('');\nconst [potentialRevenue, setPotentialRevenue] = useState('');\n\n  const onChangeName = (event) => {\n    setName(event.target.value);\n  }\n  const onChangeDirectCost = (event) => {\n    setDirectCost(event.target.value);\n  }\n  const onChangeIndirectCost = (event) => {\n    setIndirectCost(event.target.value);\n  }\n  const onChangeIntangibleCost = (event) => {\n    setIntangibleCost(event.target.value);\n  }\n  const onChangeOpportunityCost = (event) => {\n    setOpportunityCost(event.target.value);\n  }\n  const onChangePotentialRiskCost = (event) => {\n    setPotentialRiskCost(event.target.value);\n  }\n  const onChangeSalesRevenue = (event) => {\n    setSalesRevenue(event.target.value);\n  }\n  const onChangeIntangibleRevenue = (event) => {\n    setIntangibleRevenue(event.target.value);\n  }\n  const onChangePotentialRevenue = (event) => {\n    setPotentialRevenue(event.target.value);\n  }\n\n  let history = useHistory();\n\n  const handleSubmit = async () => {\n\n  let json = JSON.stringify({\n    \"_id\": entry._id,\n    \"name\": name,\n    \"cost\": [directCost, indirectCost, intangibleCost, intangibleCost, opportunityCost, potentialRiskCost],\n    \"revenues\": [salesRevenue, intangibleRevenue, potentialRevenue],\n    \"_userId\": User._id\n  });\n\n  let status = await service.createEntry(json);\n  event.preventDefault();\n\n  if(status != \"\") {\n    json = JSON.stringify({\n      \"_userId\": User._id\n    });\n\n    User.entries = await service.getUserEntries(json);\n\n    Entry._id = status[\"_id\"];\n    Entry.name = status[\"name\"];\n    Entry.cost = status[\"cost\"];\n    Entry.revenues = status[\"revenues\"];\n    Entry._userId = status[\"_userId\"];\n    Entry.ratio = status [\"ratio\"];\n    Entry.netProfit = status[\"netProfit\"];\n    history.push(\"/output\");\n  }\n  else {\n    alert(\"Failed to create entry.\");\n  }\n}\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <br/>\n      <Box pt={5} pb={0}>\n        <Box mb={4} textAlign=\"center\">\n        <Typography variant=\"h4\" component=\"h2\">Entry Input</Typography>\n          <TextField variant=\"outlined\" style={{width: \"300px\"}}\n            label=\"Entry Name *\" \n            onChange={props.onChangeName} \n            name=\"name\"\n            value={name}\n            error={name !== \"\" && !name.match(\"^[A-Za-z]\")}\n            helperText={name !== \"\" && !name.match(\"^[A-Za-z]\") ? \"Must be a valid name\" : \"\"}\n            onChange={onChangeName}\n            margin=\"normal\"\n          />\n        </Box>\n      </Box>\n      <StructureTwoColumns\n        bucket1={[<InputCost \n          directCost  = {directCost}\n          onChangeDirectCost = {onChangeDirectCost}\n          indirectCost = {indirectCost}\n          onChangeIndirectCost = {onChangeIndirectCost}\n          intangibleCost = {intangibleCost}\n          onChangeIntangibleCost = {onChangeIntangibleCost}\n          opportunityCost = {opportunityCost}\n          onChangeOpportunityCost = {onChangeOpportunityCost}\n          potentialRiskCost = {potentialRiskCost}\n          onChangePotentialRiskCost = {onChangePotentialRiskCost}\n          />]}\n        bucket2={[<InputRevenue \n            salesRevenue = {salesRevenue}\n            onChangeSalesRevenue = {onChangeSalesRevenue}\n            intangibleRevenue = {intangibleRevenue}\n            onChangeIntangibleRevenue = {onChangeIntangibleRevenue}\n            potentialRevenue = {potentialRevenue}\n            onChangePotentialRevenue = {onChangePotentialRevenue}\n          />]}\n      />\n\n\n      <StructureContainer bucket1={[<Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>Calculate</Button>]} />\n      <br></br>\n      <hr/>\n      <Footer/>\n    </React.Fragment>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}